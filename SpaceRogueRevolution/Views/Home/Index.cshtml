@{
    ViewBag.Title = "Index";
}
<script src="~/Scripts/jquery-1.8.2.js"></script>
<script src="~/Scripts/jquery-ui-1.9.2.js"></script>

<div id="canvasContainer">

    <canvas onmousedown="" id="canvas" height="400" width="800" style="position:absolute;top:0px;left:0px" ></canvas>
    
</div>
<div id ="message" style="position:absolute;top:420px;left:0px" ></div>
<div id ="display" style="position:absolute;top:450px;left:0px" ></div>
<div id ="serverprocessingdisplay" style="position:absolute;top:450px;left:0px;z-index:10" >Processing...</div>

<div id="dialog" style="position:absolute;top:0px;left:0px;z-index:5;background-color:grey;color:white;height:500px;width:500px">
    <div>
          <p>Welcome to the galaxy, You are the captain of the dart. Travel to different planets to pickup jobs and collect money. If you 
              have more than 100 million credits you win. Its that simple...
          </p>
    </div>
    <div style="position:absolute;vertical-align:bottom">
        <input type="button" value="Continue" onclick="$('#dialog').hide(1000);" />
    </div> 
</div>

<script type="text/javascript">
    $(document).ready(function()
    {
      // $("#dialog").dialog("open");
        var IsServerProcessing = false;
        var clickCount = 0;
        var gameData;
        var jobs;

        var drawScreen = function () {
            var loadedImages = 0;
            var images = [];
            var ctx = document.getElementById('canvas').getContext('2d');
            ctx.fillStyle = "rgba(0, 0, 56, 70)";
            ctx.fillRect(0, 0, 500, 500);
            var draw = function () {
                for (i = 0; i < gameData.length; i++) {
                    var item = gameData[i];
                    ctx.drawImage(images[i], item.col, item.row, 20, 20);
                };
            };

            for (i = 0; i < gameData.length; i++) {
                var image = new Image();
                var item = gameData[i];
                image.addEventListener("load", function () {
                    loadedImages++;
                    if (loadedImages == gameData.length) {
                        draw();
                    }
                }, false);
                image.src = item.FileName;
                images.push(image);
            }
        };

   

        var syncServer = function () {
            var mapObject = null;
            if (gameData != null)
                mapObject = { map: gameData };
            $('#serverprocessingdisplay').show(10);
            IsServerProcessing = true;
            $.ajax({
                type: "POST",
                url: '@Url.Action("Sync","Home")',
                data: JSON.stringify(mapObject),
                contentType: 'application/json',
                success: function (data) {
                    gameData = data;
                    $('#serverprocessingdisplay').hide(1000);
                    IsServerProcessing = false;
                    drawScreen();
                }
            });
        };

        var sendCommandToServer = function (command) {
            commandObject = { command : command };
            $.ajax({
                type: "POST",
                url: '@Url.Action("TakeAction","Home")',
                data: JSON.stringify(commandObject),
                contentType: 'application/json',
                success: function (data) {
                    gameData = data;
                    drawScreen();
                }
            });
        };

        var sendDockingCommandToServer = function (id) {
            commandObject = { planet: id };
            $.ajax({
                type: "POST",
                url: '@Url.Action("Docking","Home")',
                data: JSON.stringify(commandObject),
                contentType: 'application/json',
                success: function (data) {
                    jobs = data;
                    for (var i = 0; i < data.length; i++) {
                        $('#message').append(i, "<div>" + jobs[i].Description + "</div>");
                    }
                     
                }
            });
        };

        var getKeyBoardAction = function (evt) {
            var playerSpaceShip = gameData[0];
            switch (evt.keyCode) {
                case 65:
                    if (playerSpaceShip.col - 5)
                        gameData[10].col -= 5;
                    break;
                case 87:
                    if (playerSpaceShip.row - 5)
                        gameData[10].row -= 5;
                    break;
                case 83:
                    if (playerSpaceShip.col + 5 < 400)
                        gameData[10].col += 5;
                    break;
                case 90:
                    if (playerSpaceShip.row + 5 < 400)
                        gameData[10].row += 5;
                    break;
                default:
                    sendCommandToServer(evt.keyCode);
                    break;
            }
            //check for dock
            var docked = false;
            for (var i = 0; i < gameData.length-1; i++) {
                if (intersect(gameData[i].col, gameData[i].row, gameData[10].col, gameData[10].row)) {
                    
                    $("#display").text('Docking');
                    sendDockingCommandToServer(gameData[i].ID);
                }
            }
            
        };


        var doKeyDown = function (evt) {
            if (!IsServerProcessing) {
                var command = new String();
                getKeyBoardAction(evt);
                drawScreen();
                if (clickCount++ > 5) {
                    syncServer(gameData, evt.keyCode);
                    clickCount = 0;
                }
            }
        };

        var intersect = function (firstX, firstY, secondX, secondY)
        {
            if (firstX == secondX && firstY == secondY)
                return true;

            if ((Math.abs(firstX - secondX)  <=10) && (Math.abs(firstY - secondY)<=10))
                return true;

            return false;
        };

        var action = "";
        window.addEventListener('keydown', doKeyDown, true);
        

        $("#canvas").mousedown(function (e) {
            var fixedX = e.clientX - 8;
            var fixedY = e.clientY - 9;
            //determine any intersections
            for(var i=0;i<gameData.length;i++)
            {
                if (intersect(gameData[i].col, gameData[i].row, fixedX, fixedY)) {
                    $("#display").text(gameData[i].Description);
                }
            }
            $("#message").text("clicked: " + fixedX + ":" + fixedY);
        });
        syncServer();
    });
</script>



